import json  # –î–ª—è —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ JSON
from time import sleep  # –î–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–¥–µ—Ä–∂–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏


# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ Redis
from utils.redis_service import save_product_to_cache

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è Kafka consumer'–∞
from utils.kafka_service.kafka_service import get_consumer


# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–¥–Ω–æ–≥–æ Kafka-—Å–æ–æ–±—â–µ–Ω–∏—è
def process_message(message):
    data = message.value  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è JSON)
    product_name = data.get("product_name")  # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø—Ä–æ–¥—É–∫—Ç–∞

    if not product_name:
        print("‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ 'product_name'")
        return  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ—Ç –∫–ª—é—á–∞ 'product_name'

    print(f"üì• –û–±—Ä–∞–±–æ—Ç–∫–∞: {product_name}")
    sleep(2)  # –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ API –∏–ª–∏ –ë–î)

    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞
    product_data = {
        "name": product_name,
        "price": "99.99",
        "description": f"{product_name} ‚Äî –ø—Ä–∏–º–µ—Ä –æ–ø–∏—Å–∞–Ω–∏—è",
    }

    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Redis —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–µ—Ä–≤–∏—Å–∞
        save_product_to_cache(product_name, json.dumps(product_data))
        print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ Redis: {product_name}")
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ Redis: {e}")


# –û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
def launch_consumer():
    consumer = get_consumer()  # –ü–æ–ª—É—á–∞–µ–º Kafka consumer
    print("üéß –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Å—é–º–µ—Ä–∞...")  # –°–æ–æ–±—â–∞–µ–º –æ –∑–∞–ø—É—Å–∫–µ

    # –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ —Å–ª—É—à–∞–µ–º Kafka-—Ç–æ–ø–∏–∫
    for message in consumer:
        try:
            process_message(message)  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        except Exception as e:
            # –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –Ω–∞ —Å–ª—É—á–∞–π –ø—Ä–æ–±–ª–µ–º –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
